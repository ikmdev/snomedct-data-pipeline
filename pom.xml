<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>dev.ikm.build</groupId>
        <artifactId>java-parent</artifactId>
        <version>1.64.0</version>
        <relativePath/>
    </parent>
    
    <groupId>dev.ikm.data.snomedct</groupId>
    <artifactId>snomedct-${source.qualifier}</artifactId>
    <version>${source.version}-${maven.build.timestamp}-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>SNOMED CT Data</name>

    <properties>
        <!-- maven plugins -->
        <maven-artifacts.version>1.35.0</maven-artifacts.version>
        <maven-assembly-plugin.version>3.7.1</maven-assembly-plugin.version>
        <exec-maven-plugin.version>3.5.0</exec-maven-plugin.version>
        <maven-dependency-plugin.version>3.8.1</maven-dependency-plugin.version>
        <maven-clean-plugin.version>3.3.1</maven-clean-plugin.version>
        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <!-- origin -->
        <origin.working.directory>${project.build.directory}/origin-sources</origin.working.directory>
<!--        <source.zip>${user.home}/Downloads/SnomedCT_InternationalRF2_PRODUCTION_${source.version}.zip</source.zip>-->
<!--        <gmdn.mapping.source.zip>${user.home}/Downloads/SnomedCT_GMDNMapRelease_PRODUCTION_20250331T120000Z.zip</gmdn.mapping.source.zip>-->
<!--        <gmdn.device.source.zip>${user.home}/Downloads/gmdnData25_7.zip</gmdn.device.source.zip>-->
        <dataStoreLocation>${project.basedir}/../target</dataStoreLocation>
        <dataStore>snomedct-international</dataStore>   
        
        <maven.compiler.source>23</maven.compiler.source>
        <maven.compiler.target>23</maven.compiler.target>
        <java.version>23</java.version>
        <lucene.version>9.12.1</lucene.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <tinkar-core.version>1.121.0</tinkar-core.version>
        <tinkar-schema.version>1.42.0</tinkar-schema.version>
        <tinkar-transformer-api.version>1.7.0</tinkar-transformer-api.version>
        <log4j.version>3.0.0-alpha1</log4j.version>
        <slf4j.version>2.0.17</slf4j.version>
        <tinkar-composer.version>1.8.0</tinkar-composer.version>
        <eclipse-collections-api.version>12.0.0.M3-r2</eclipse-collections-api.version>
        <maven-plugin-plugin.version>3.13.0</maven-plugin-plugin.version>
        <maven-plugin-annotations.version>3.15.0</maven-plugin-annotations.version>
        <maven-plugin-api.version>3.9.9</maven-plugin-api.version>
        <!--nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version-->
        <maven-deploy-plugin.version>3.1.4</maven-deploy-plugin.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <maven-gpg-plugin.version>3.2.7</maven-gpg-plugin.version>
        <build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>
        <jupiter.version>5.12.2</jupiter.version>

        <!-- origin -->
        <origin.namespace>3094dbd1-60cf-44a6-92e3-0bb32ca4d3de</origin.namespace>

        <!-- starter data -->
        <tinkar-starter-data.groupId>dev.ikm.data.tinkar</tinkar-starter-data.groupId>
        <tinkar-starter-data.artifactId>tinkar-starter-data</tinkar-starter-data.artifactId>
        <tinkar-starter-data.classifier>unreasoned-pb</tinkar-starter-data.classifier>
        <tinkar-starter-data.version>20250813</tinkar-starter-data.version>




        <source.qualifier>international</source.qualifier>
        <source.version>20250101T120000Z</source.version>
        <snomedct-origin.version>${source.qualifier}-${source.version}+1.0.0-SNAPSHOT</snomedct-origin.version>
        <data-artifact.prefix>${project.artifactId}-${project.version}</data-artifact.prefix>
        <maven.build.timestamp.format>yyyyMMdd</maven.build.timestamp.format>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>dev.ikm.maven.tinkar</groupId>
                    <artifactId>tinkar-maven-plugin</artifactId>
                    <version>${maven-artifacts.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>dev.ikm.maven</groupId>
                    <artifactId>snomedct-starterdata-maven-plugin</artifactId>
                    <version>1.0.0-SNAPSHOT</version>
                </plugin>
                <!-- Skip Staging Plugin -->
                <plugin>
                    <groupId>org.sonatype.central</groupId>
                    <artifactId>central-publishing-maven-plugin</artifactId>
                    <configuration>
                        <skipPublishing>false</skipPublishing>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-starter-data-dependencies</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${tinkar-starter-data.groupId}</groupId>
                                    <artifactId>${tinkar-starter-data.artifactId}</artifactId>
                                    <version>${tinkar-starter-data.version}</version>
                                    <classifier>unreasoned-pb</classifier>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/input-data</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-origin-data-dependency</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>dev.ikm.data.snomedct</groupId>
                                    <artifactId>snomedct-origin</artifactId>
                                    <version>${snomedct-origin.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/origin-data/snomedct</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <!-- Attach reasoned and unreasoned exports to the artifact -->
                <executions>
                    <execution>
                        <id>attach-artifacts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${project.build.directory}/${data-artifact.prefix}-reasoned-pb.zip</file>
                                    <type>zip</type>
                                    <classifier>reasoned-pb</classifier>
                                </artifact>
                                <artifact>
                                    <file>${project.build.directory}/${data-artifact.prefix}-unreasoned-pb.zip</file>
                                    <type>zip</type>
                                    <classifier>unreasoned-pb</classifier>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>generateData</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>dev.ikm.maven.tinkar</groupId>
                        <artifactId>tinkar-maven-plugin</artifactId>
                        <executions>
                            <!-- Load Input Data (generate-resources) -->
                            <execution>
                                <id>${project.artifactId}-load-input-data</id>
                                <goals>
                                    <goal>load-data</goal>
                                </goals>
                                <configuration>
                                    <fileset>
                                        <directory>${project.build.directory}/input-data</directory>
                                        <includes>
                                            <include>**pb.zip</include>
                                            <include>**ike-cs.zip</include>
                                        </includes>
                                    </fileset>
                                </configuration>
                            </execution>
                            <!-- Run owl transformer (process-classes) -->
                            <execution>
                                <id>${project.artifactId}-owl-transform</id>
                                <goals>
                                    <goal>run-owl-transformer</goal>
                                </goals>
                            </execution>
                            <!-- Export unreasoned data as a protocol buffers zip file (package) -->
                            <execution>
                                <id>${project.artifactId}-unreasoned-export</id>
                                <goals>
                                    <goal>export-tinkar-data</goal>
                                </goals>
                                <configuration>
                                    <fileName>${data-artifact.prefix}-unreasoned-pb.zip</fileName>
                                </configuration>
                            </execution>
                            <!-- Run full reasoner (process-classes) -->
                            <execution>
                                <id>${project.artifactId}-full-reasoner</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run-full-reasoner</goal>
                                </goals>
                            </execution>
                            <!-- Export reasoned data as a protocol buffers zip file (package) -->
                            <execution>
                                <id>${project.artifactId}-reasoned-export</id>
                                <goals>
                                    <goal>export-tinkar-data</goal>
                                </goals>
                                <configuration>
                                    <exportDirectory>${project.build.directory}</exportDirectory>
                                    <fileName>${data-artifact.prefix}-reasoned-pb.zip</fileName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Build Snomed Starter Data-->
                    <plugin>
                        <groupId>dev.ikm.maven.snomedct</groupId>
                        <artifactId>snomedct-starterdata-maven-plugin</artifactId>
                        <version>1.0.0-SNAPSHOT</version>
                        <configuration>
                            <namespaceString>${origin.namespace}</namespaceString>
                            <datastorePath>${project.build.directory}/datastore</datastorePath>
                        </configuration>
                        <executions>
                            <execution>
                                <id>run-snomed-starterdata</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>run-snomed-starterdata</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
<!--                    &lt;!&ndash; Build Snomed Data&ndash;&gt;-->
<!--                    <plugin>-->
<!--                        <groupId>dev.ikm.maven.snomedct</groupId>-->
<!--                        <artifactId>snomedct-transformation-maven-plugin</artifactId>-->
<!--                        <version>1.0.0-SNAPSHOT</version>-->
<!--                        <configuration>-->
<!--                            <namespaceString>${origin.namespace}</namespaceString>-->
<!--                            <datastorePath>${project.build.directory}/datastore</datastorePath>-->
<!--                            <inputDirectoryPath>${project.build.directory}/origin-data/snomedct</inputDirectoryPath>-->
<!--                            <dataOutputPath>${project.build.directory}</dataOutputPath>-->
<!--                            <skipUnzip>true</skipUnzip>-->
<!--                        </configuration>-->
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <id>run-snomed-transformation</id>-->
<!--                                <phase>compile</phase>-->
<!--                                <goals>-->
<!--                                    <goal>run-snomed-transformation</goal>-->
<!--                                </goals>-->
<!--                            </execution>-->
<!--                        </executions>-->
<!--                    </plugin>-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <finalName>${data-artifact.prefix}</finalName>
                        </configuration>
                        <executions>
                            <!-- Zip up unreasoned spinedarray database -->
                            <execution>
                                <id>unreasoned-sa-zip</id>
                                <phase>process-classes</phase> <!-- Overriding default phase: force this execution before reasoning -->
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>src/assembly/unreasoned-sa.xml</descriptor>
                                    </descriptors>
                                </configuration>
                            </execution>
                            <!-- Zip up reasoned spinedarray database -->
                            <execution>
                                <phase>package</phase>
                                <id>reasoned-sa-zip</id>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>src/assembly/reasoned-sa.xml</descriptor>
                                    </descriptors>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
